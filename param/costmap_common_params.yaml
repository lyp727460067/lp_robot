max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.30  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  1.4
  origin_z:             0.0
  z_resolution:         0.2
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 4.5
  raytrace_range: 10.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 4  #注意雷达高度如果高于这个的hua会 报告下面这个错
  #The origin for the sensor at (0.20, 0.03, 0.44) is out of map bound
  publish_voxel_map: true
  observation_sources:  scan dpoint
  scan:
    data_type:  PointCloud2
    topic: /scan_matched_points2
    marking: true
    clearing: true
    min_obstacle_height: -0.05
    max_obstacle_height: 1.35
  dpoint:
    data_type: PointCloud2
    topic: /camera/depth/color/points
    marking: true
    clearing: true
    min_obstacle_height: 0.1
    max_obstacle_height: 1.35  
  bump:
    data_type: PointCloud2
    topic: mobile_base/sensors/bumper_pointcloud
    marking: true
    clearing: false
    min_obstacle_height: 0.0
    max_obstacle_height: 0.15
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  50.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.1 # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
  

